{"version":3,"sources":["Alarm-ringtone.mp3","App.js","reportWebVitals.js","index.js"],"names":["BreakLength","props","className","id","onClick","handleUp","break","handleDown","SessionLength","session","Display","minute","title","second","App","componentDidMount","setState","timer","state","handleUpSession","running","handleUpBreak","handleDownSession","handleDownBreak","handleCountDownStart","ID","setInterval","Audio","sound","play","clearInterval","handleCountDownStop","handleRestart","handleClick","this","bind","Math","floor","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4159315.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Alarm-ringtone.e419dfef.mp3\";","import './App.css';\nimport React from 'react';\nimport sound from './Alarm-ringtone.mp3';\n\nconst BreakLength = (props) => {\n  return (\n    <div className='break'>\n      <h2 className='number'>Break Length</h2>\n      <h2 className='button up' id='breakUp' onClick={props.handleUp}>+</h2>\n      <h2 className='numbers'>{props.break}</h2>\n      <h2 className='button down' id='breakDown' onClick={props.handleDown}>-</h2>\n    </div>\n  )\n}\n\nconst SessionLength = (props) => {\n  return (\n    <div className='session'>\n      <h2 className='number'>Session Length</h2>\n      <h2 className='button up' id='sessionUp' onClick={props.handleUp}>+</h2>\n      <h2 className='numbers'>{props.session}</h2>\n      <h2 className='button down' id='sessionDown' onClick={props.handleDown}>-</h2>\n    </div>\n  )\n}\n\nconst Display = (props) => {\n  let className = 'numbers';\n  if (props.minute<=1){\n    className+=' alert';\n  }\n  return (\n    <div className='display'>\n      <h2>{props.title}:</h2>\n      <h2 className={className}>\n        {props.minute < 10 ? '0'+props.minute : props.minute}\n        :\n        {props.second < 10 ? '0'+ props.second : props.second}\n      </h2>\n    </div>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      title: 'Session',\n      break: 5,\n      session: 25,\n      timer: 0,\n      ID: null,\n      running: false\n    };\n  };\n  componentDidMount = () => {\n    this.setState({\n      timer: this.state.session * 60\n    });\n  };\n  handleUpSession = () => {\n    if (this.state.running===false) {\n      this.setState({\n        session: this.state.session + 1,\n        timer: (this.state.session+1) * 60\n      })\n    }\n  };\n  handleUpBreak = () => {\n    this.setState({\n      break: this.state.break + 1,\n    })\n  };\n  handleDownSession = () => {\n    if (!this.state.running) {\n      this.setState({\n        session: this.state.session > 1 ? this.state.session - 1 : this.state.session,\n        timer: this.state.session > 1 ? (this.state.session-1) * 60 : this.state.session*60\n      })\n    }\n  };\n  handleDownBreak = () => {\n    this.setState({\n      break: this.state.break > 1 ? this.state.break - 1 : this.state.break,\n    })\n  };\n  handleCountDownStart = () => {\n    this.setState({\n      ID: setInterval(() => {\n        this.setState({\n          timer: this.state.timer - 1\n        });\n        if (this.state.title === 'Session' && this.state.timer === 0){\n          this.setState({\n            running: false,\n            title: 'Break',\n            timer: this.state.break * 60\n          });\n          const audio = new Audio(sound);\n          audio.play();\n        } else if (this.state.title === 'Break' && this.state.timer === 0){\n          clearInterval(this.state.ID);\n          this.setState({\n            running: false,\n            title: 'Session',\n            timer: this.state.session * 60\n          })\n        }\n      }, 1000),\n      running: true\n    });\n  };\n  handleCountDownStop = () => {\n    clearInterval(this.state.ID);\n    this.setState({running:false})\n  };\n  handleRestart = () => {\n    clearInterval(this.state.ID);\n    this.setState({\n      title: 'Session',\n      running: false,\n      timer: this.state.session*60\n    });\n  };\n\n  handleClick = () => {\n    if (this.state.title === 'Session' && this.state.running === false) {\n      this.handleCountDownStart()\n    } else if (this.state.title === 'Session' && this.state.running === true){\n      this.handleCountDownStop()\n    }\n  };\n  render() {\n    return (\n      <div>\n      <div className='App'>\n        <h1>Pomodoro Timer!</h1>\n        <div className='settings'>\n          <BreakLength handleUp={this.handleUpBreak.bind(this)} handleDown={this.handleDownBreak.bind(this)} break={this.state.break}/>\n          <SessionLength handleUp={this.handleUpSession.bind(this)} handleDown={this.handleDownSession.bind(this)} session={this.state.session}/>\n        </div>\n        <Display title={this.state.title} minute={Math.floor(this.state.timer/60)} second={this.state.timer%60}/>\n        <div className='buttons'>\n          <h2 className='button' id='play' onClick={this.handleClick.bind(this)}>play/pause</h2>\n          <h2 className='button' id='restart' onClick={this.handleRestart.bind(this)}>restart</h2>\n        </div>\n      </div>\n      <div className='credits'>\n        <p>Designed and coded by Abay Nurpeissov</p>\n      </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}